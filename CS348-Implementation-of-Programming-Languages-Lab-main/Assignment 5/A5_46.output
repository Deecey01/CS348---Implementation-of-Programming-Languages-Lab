State 150 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: ε

    2 N: ε

    3 changetable: ε

    4 primary_expression: IDENTIFIER
    5                   | INTEGER_CONSTANT
    6                   | CHARACTER_CONSTANT
    7                   | STRING_LITERAL
    8                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    9 postfix_expression: primary_expression
   10                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   11                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE

   12 argument_expression_list_opt: argument_expression_list
   13                             | ε

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list COMMA assignment_expression

   16 unary_expression: postfix_expression
   17                 | unary_operator unary_expression

   18 unary_operator: BITWISE_AND
   19               | MUL
   20               | ADD
   21               | SUB
   22               | EXCLAIM

   23 multiplicative_expression: unary_expression
   24                          | multiplicative_expression MUL unary_expression
   25                          | multiplicative_expression DIV unary_expression
   26                          | multiplicative_expression MOD unary_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression ADD multiplicative_expression
   29                    | additive_expression SUB multiplicative_expression

   30 relational_expression: additive_expression
   31                      | relational_expression BIT_SL additive_expression
   32                      | relational_expression BIT_SR additive_expression
   33                      | relational_expression LTE additive_expression
   34                      | relational_expression GTE additive_expression

   35 equality_expression: relational_expression
   36                    | equality_expression EQ M relational_expression
   37                    | equality_expression NEQ M relational_expression

   38 and_helper: logical_and_expression AND

   39 logical_and_expression: equality_expression
   40                       | and_helper M equality_expression

   41 or_helper: logical_or_expression OR

   42 logical_or_expression: logical_and_expression
   43                      | or_helper M logical_and_expression

   44 condition: logical_or_expression QUESTION

   45 conditional_expression: logical_or_expression
   46                       | condition M expression N COLON M conditional_expression

   47 assignment_expression: conditional_expression
   48                      | unary_expression ASSIGN assignment_expression

   49 expression: assignment_expression

   50 declaration: type_specifier init_declarator SEMICOLON

   51 init_declarator: declarator
   52                | declarator ASSIGN initializer

   53 type_specifier: VOID
   54               | CHAR
   55               | INT

   56 declarator: pointer direct_declarator
   57           | direct_declarator

   58 declarator_helper: IDENTIFIER ROUND_BRACKET_OPEN

   59 direct_declarator: IDENTIFIER
   60                  | IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE
   61                  | IDENTIFIER SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE
   62                  | declarator_helper changetable parameter_list_opt ROUND_BRACKET_CLOSE

   63 pointer: MUL

   64 parameter_list_opt: parameter_list
   65                   | ε

   66 parameter_list: parameter_declaration
   67               | parameter_list COMMA parameter_declaration

   68 parameter_declaration: type_specifier declarator
   69                      | type_specifier

   70 initializer: assignment_expression

   71 statement: compound_statement
   72          | expression_statement
   73          | selection_statement
   74          | iteration_statement
   75          | jump_statement

   76 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

   77 block_item_list_opt: ε
   78                    | block_item_list

   79 block_item_list: block_item
   80                | block_item_list M block_item

   81 block_item: declaration
   82           | statement

   83 expression_statement: expression SEMICOLON
   84                     | SEMICOLON

   85 if_helper: IF ROUND_BRACKET_OPEN expression

   86 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement
   87                    | if_helper ROUND_BRACKET_CLOSE M statement N ELSE M statement

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

   89 jump_statement: RETURN expression SEMICOLON
   90               | RETURN SEMICOLON

   91 translation_unit: external_declaration
   92                 | translation_unit external_declaration

   93 external_declaration: function_definition
   94                     | declaration

   95 function_definition: type_specifier declarator changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR (258) 54
    ELSE (259) 87
    FOR (260) 88
    IF (261) 85
    INT (262) 55
    RETURN (263) 89 90
    VOID (264) 53
    IDENTIFIER (265) 4 58 59 60 61
    STRING_LITERAL <char_value> (266) 7
    SQUARE_BRACKET_OPEN (267) 10 60 61
    SQUARE_BRACKET_CLOSE (268) 10 60 61
    ROUND_BRACKET_OPEN (269) 8 11 58 85 88
    ROUND_BRACKET_CLOSE (270) 8 11 62 86 87 88
    CURLY_BRACKET_OPEN (271) 76 95
    CURLY_BRACKET_CLOSE (272) 76 95
    BITWISE_AND (273) 18
    MUL (274) 19 24 63
    ADD (275) 20 28
    SUB (276) 21 29
    EXCLAIM (277) 22
    DIV (278) 25
    MOD (279) 26
    BIT_SL (280) 31
    BIT_SR (281) 32
    LTE (282) 33
    GTE (283) 34
    EQ (284) 36
    NEQ (285) 37
    AND (286) 38
    OR (287) 41
    QUESTION (288) 44
    COLON (289) 46
    SEMICOLON (290) 50 83 84 89 90
    ASSIGN (291) 48 52
    COMMA (292) 15 67
    THEN (293)
    INTEGER_CONSTANT <intval> (294) 5 60
    CHARACTER_CONSTANT <char_value> (295) 6


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    M <instr_number> (42)
        on left: 1
        on right: 36 37 40 43 46 80 86 87 88
    N <stat> (43)
        on left: 2
        on right: 46 87 88
    changetable (44)
        on left: 3
        on right: 62 95
    primary_expression <expr> (45)
        on left: 4 5 6 7 8
        on right: 9
    postfix_expression <A> (46)
        on left: 9 10 11
        on right: 10 11 16
    argument_expression_list_opt <num_params> (47)
        on left: 12 13
        on right: 11
    argument_expression_list <num_params> (48)
        on left: 14 15
        on right: 12 15
    unary_expression <A> (49)
        on left: 16 17
        on right: 17 23 24 25 26 48
    unary_operator <unaryOp> (50)
        on left: 18 19 20 21 22
        on right: 17
    multiplicative_expression <expr> (51)
        on left: 23 24 25 26
        on right: 24 25 26 27 28 29
    additive_expression <expr> (52)
        on left: 27 28 29
        on right: 28 29 30 31 32 33 34
    relational_expression <expr> (53)
        on left: 30 31 32 33 34
        on right: 31 32 33 34 35 36 37
    equality_expression <expr> (54)
        on left: 35 36 37
        on right: 36 37 39 40
    and_helper <expr> (55)
        on left: 38
        on right: 40
    logical_and_expression <expr> (56)
        on left: 39 40
        on right: 38 42 43
    or_helper <expr> (57)
        on left: 41
        on right: 43
    logical_or_expression <expr> (58)
        on left: 42 43
        on right: 41 44 45
    condition <expr> (59)
        on left: 44
        on right: 46
    conditional_expression <expr> (60)
        on left: 45 46
        on right: 46 47
    assignment_expression <expr> (61)
        on left: 47 48
        on right: 14 15 48 49 70
    expression <expr> (62)
        on left: 49
        on right: 8 10 46 83 85 88 89
    declaration (63)
        on left: 50
        on right: 81 94
    init_declarator <symp> (64)
        on left: 51 52
        on right: 50
    type_specifier (65)
        on left: 53 54 55
        on right: 50 68 69 95
    declarator <symp> (66)
        on left: 56 57
        on right: 51 52 68 95
    declarator_helper <symp> (67)
        on left: 58
        on right: 62
    direct_declarator <symp> (68)
        on left: 59 60 61 62
        on right: 56 57
    pointer <sym_type> (69)
        on left: 63
        on right: 56
    parameter_list_opt (70)
        on left: 64 65
        on right: 62
    parameter_list (71)
        on left: 66 67
        on right: 64 67
    parameter_declaration (72)
        on left: 68 69
        on right: 66 67
    initializer <symp> (73)
        on left: 70
        on right: 52
    statement <stat> (74)
        on left: 71 72 73 74 75
        on right: 82 86 87 88
    compound_statement <stat> (75)
        on left: 76
        on right: 71
    block_item_list_opt <stat> (76)
        on left: 77 78
        on right: 76 95
    block_item_list <stat> (77)
        on left: 79 80
        on right: 78 80
    block_item <stat> (78)
        on left: 81 82
        on right: 79 80
    expression_statement <expr> (79)
        on left: 83 84
        on right: 72 88
    if_helper <expr> (80)
        on left: 85
        on right: 86 87
    selection_statement <stat> (81)
        on left: 86 87
        on right: 73
    iteration_statement <stat> (82)
        on left: 88
        on right: 74
    jump_statement <stat> (83)
        on left: 89 90
        on right: 75
    translation_unit (84)
        on left: 91 92
        on right: 0 92
    external_declaration (85)
        on left: 93 94
        on right: 91 92
    function_definition (86)
        on left: 95
        on right: 93


State 0

    0 $accept: • translation_unit $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    declaration           go to state 4
    type_specifier        go to state 5
    translation_unit      go to state 6
    external_declaration  go to state 7
    function_definition   go to state 8


State 1

   54 type_specifier: CHAR •

    $default  reduce using rule 54 (type_specifier)


State 2

   55 type_specifier: INT •

    $default  reduce using rule 55 (type_specifier)


State 3

   53 type_specifier: VOID •

    $default  reduce using rule 53 (type_specifier)


State 4

   94 external_declaration: declaration •

    $default  reduce using rule 94 (external_declaration)


State 5

   50 declaration: type_specifier • init_declarator SEMICOLON
   95 function_definition: type_specifier • declarator changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 9
    MUL         shift, and go to state 10

    init_declarator    go to state 11
    declarator         go to state 12
    declarator_helper  go to state 13
    direct_declarator  go to state 14
    pointer            go to state 15


State 6

    0 $accept: translation_unit • $end
   92 translation_unit: translation_unit • external_declaration

    $end  shift, and go to state 16
    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    declaration           go to state 4
    type_specifier        go to state 5
    external_declaration  go to state 17
    function_definition   go to state 8


State 7

   91 translation_unit: external_declaration •

    $default  reduce using rule 91 (translation_unit)


State 8

   93 external_declaration: function_definition •

    $default  reduce using rule 93 (external_declaration)


State 9

   58 declarator_helper: IDENTIFIER • ROUND_BRACKET_OPEN
   59 direct_declarator: IDENTIFIER •
   60                  | IDENTIFIER • SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE
   61                  | IDENTIFIER • SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 18
    ROUND_BRACKET_OPEN   shift, and go to state 19

    $default  reduce using rule 59 (direct_declarator)


State 10

   63 pointer: MUL •

    $default  reduce using rule 63 (pointer)


State 11

   50 declaration: type_specifier init_declarator • SEMICOLON

    SEMICOLON  shift, and go to state 20


State 12

   51 init_declarator: declarator •
   52                | declarator • ASSIGN initializer
   95 function_definition: type_specifier declarator • changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    ASSIGN  shift, and go to state 21

    SEMICOLON  reduce using rule 51 (init_declarator)
    $default   reduce using rule 3 (changetable)

    changetable  go to state 22


State 13

   62 direct_declarator: declarator_helper • changetable parameter_list_opt ROUND_BRACKET_CLOSE

    $default  reduce using rule 3 (changetable)

    changetable  go to state 23


State 14

   57 declarator: direct_declarator •

    $default  reduce using rule 57 (declarator)


State 15

   56 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 9

    declarator_helper  go to state 13
    direct_declarator  go to state 24


State 16

    0 $accept: translation_unit $end •

    $default  accept


State 17

   92 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 92 (translation_unit)


State 18

   60 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN • INTEGER_CONSTANT SQUARE_BRACKET_CLOSE
   61                  | IDENTIFIER SQUARE_BRACKET_OPEN • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 25
    INTEGER_CONSTANT      shift, and go to state 26


State 19

   58 declarator_helper: IDENTIFIER ROUND_BRACKET_OPEN •

    $default  reduce using rule 58 (declarator_helper)


State 20

   50 declaration: type_specifier init_declarator SEMICOLON •

    $default  reduce using rule 50 (declaration)


State 21

   52 init_declarator: declarator ASSIGN • initializer

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 51
    initializer                go to state 52


State 22

   95 function_definition: type_specifier declarator changetable • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 53


State 23

   62 direct_declarator: declarator_helper changetable • parameter_list_opt ROUND_BRACKET_CLOSE

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    $default  reduce using rule 65 (parameter_list_opt)

    type_specifier         go to state 54
    parameter_list_opt     go to state 55
    parameter_list         go to state 56
    parameter_declaration  go to state 57


State 24

   56 declarator: pointer direct_declarator •

    $default  reduce using rule 56 (declarator)


State 25

   61 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 61 (direct_declarator)


State 26

   60 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 58


State 27

    4 primary_expression: IDENTIFIER •

    $default  reduce using rule 4 (primary_expression)


State 28

    7 primary_expression: STRING_LITERAL •

    $default  reduce using rule 7 (primary_expression)


State 29

    8 primary_expression: ROUND_BRACKET_OPEN • expression ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 60


State 30

   18 unary_operator: BITWISE_AND •

    $default  reduce using rule 18 (unary_operator)


State 31

   19 unary_operator: MUL •

    $default  reduce using rule 19 (unary_operator)


State 32

   20 unary_operator: ADD •

    $default  reduce using rule 20 (unary_operator)


State 33

   21 unary_operator: SUB •

    $default  reduce using rule 21 (unary_operator)


State 34

   22 unary_operator: EXCLAIM •

    $default  reduce using rule 22 (unary_operator)


State 35

    5 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 5 (primary_expression)


State 36

    6 primary_expression: CHARACTER_CONSTANT •

    $default  reduce using rule 6 (primary_expression)


State 37

    9 postfix_expression: primary_expression •

    $default  reduce using rule 9 (postfix_expression)


State 38

   10 postfix_expression: postfix_expression • SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   11                   | postfix_expression • ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   16 unary_expression: postfix_expression •

    SQUARE_BRACKET_OPEN  shift, and go to state 61
    ROUND_BRACKET_OPEN   shift, and go to state 62

    $default  reduce using rule 16 (unary_expression)


State 39

   23 multiplicative_expression: unary_expression •
   48 assignment_expression: unary_expression • ASSIGN assignment_expression

    ASSIGN  shift, and go to state 63

    $default  reduce using rule 23 (multiplicative_expression)


State 40

   17 unary_expression: unary_operator • unary_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression  go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 64
    unary_operator      go to state 40


State 41

   24 multiplicative_expression: multiplicative_expression • MUL unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   27 additive_expression: multiplicative_expression •

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 27 (additive_expression)


State 42

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   30 relational_expression: additive_expression •

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 30 (relational_expression)


State 43

   31 relational_expression: relational_expression • BIT_SL additive_expression
   32                      | relational_expression • BIT_SR additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   35 equality_expression: relational_expression •

    BIT_SL  shift, and go to state 70
    BIT_SR  shift, and go to state 71
    LTE     shift, and go to state 72
    GTE     shift, and go to state 73

    $default  reduce using rule 35 (equality_expression)


State 44

   36 equality_expression: equality_expression • EQ M relational_expression
   37                    | equality_expression • NEQ M relational_expression
   39 logical_and_expression: equality_expression •

    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 39 (logical_and_expression)


State 45

   40 logical_and_expression: and_helper • M equality_expression

    $default  reduce using rule 1 (M)

    M  go to state 76


State 46

   38 and_helper: logical_and_expression • AND
   42 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 77

    $default  reduce using rule 42 (logical_or_expression)


State 47

   43 logical_or_expression: or_helper • M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 78


State 48

   41 or_helper: logical_or_expression • OR
   44 condition: logical_or_expression • QUESTION
   45 conditional_expression: logical_or_expression •

    OR        shift, and go to state 79
    QUESTION  shift, and go to state 80

    $default  reduce using rule 45 (conditional_expression)


State 49

   46 conditional_expression: condition • M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 81


State 50

   47 assignment_expression: conditional_expression •

    $default  reduce using rule 47 (assignment_expression)


State 51

   70 initializer: assignment_expression •

    $default  reduce using rule 70 (initializer)


State 52

   52 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 52 (init_declarator)


State 53

   95 function_definition: type_specifier declarator changetable CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    INT                 shift, and go to state 2
    RETURN              shift, and go to state 84
    VOID                shift, and go to state 3
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    $default  reduce using rule 77 (block_item_list_opt)

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    declaration                go to state 88
    type_specifier             go to state 89
    statement                  go to state 90
    compound_statement         go to state 91
    block_item_list_opt        go to state 92
    block_item_list            go to state 93
    block_item                 go to state 94
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 54

   68 parameter_declaration: type_specifier • declarator
   69                      | type_specifier •

    IDENTIFIER  shift, and go to state 9
    MUL         shift, and go to state 10

    $default  reduce using rule 69 (parameter_declaration)

    declarator         go to state 100
    declarator_helper  go to state 13
    direct_declarator  go to state 14
    pointer            go to state 15


State 55

   62 direct_declarator: declarator_helper changetable parameter_list_opt • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 101


State 56

   64 parameter_list_opt: parameter_list •
   67 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 102

    $default  reduce using rule 64 (parameter_list_opt)


State 57

   66 parameter_list: parameter_declaration •

    $default  reduce using rule 66 (parameter_list)


State 58

   60 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 60 (direct_declarator)


State 59

   49 expression: assignment_expression •

    $default  reduce using rule 49 (expression)


State 60

    8 primary_expression: ROUND_BRACKET_OPEN expression • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 103


State 61

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN • expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 104


State 62

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN • argument_expression_list_opt ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    $default  reduce using rule 13 (argument_expression_list_opt)

    primary_expression            go to state 37
    postfix_expression            go to state 38
    argument_expression_list_opt  go to state 105
    argument_expression_list      go to state 106
    unary_expression              go to state 39
    unary_operator                go to state 40
    multiplicative_expression     go to state 41
    additive_expression           go to state 42
    relational_expression         go to state 43
    equality_expression           go to state 44
    and_helper                    go to state 45
    logical_and_expression        go to state 46
    or_helper                     go to state 47
    logical_or_expression         go to state 48
    condition                     go to state 49
    conditional_expression        go to state 50
    assignment_expression         go to state 107


State 63

   48 assignment_expression: unary_expression ASSIGN • assignment_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 108


State 64

   17 unary_expression: unary_operator unary_expression •

    $default  reduce using rule 17 (unary_expression)


State 65

   24 multiplicative_expression: multiplicative_expression MUL • unary_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression  go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 109
    unary_operator      go to state 40


State 66

   25 multiplicative_expression: multiplicative_expression DIV • unary_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression  go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 110
    unary_operator      go to state 40


State 67

   26 multiplicative_expression: multiplicative_expression MOD • unary_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression  go to state 37
    postfix_expression  go to state 38
    unary_expression    go to state 111
    unary_operator      go to state 40


State 68

   28 additive_expression: additive_expression ADD • multiplicative_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 113


State 69

   29 additive_expression: additive_expression SUB • multiplicative_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 114


State 70

   31 relational_expression: relational_expression BIT_SL • additive_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 115


State 71

   32 relational_expression: relational_expression BIT_SR • additive_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 116


State 72

   33 relational_expression: relational_expression LTE • additive_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 117


State 73

   34 relational_expression: relational_expression GTE • additive_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 118


State 74

   36 equality_expression: equality_expression EQ • M relational_expression

    $default  reduce using rule 1 (M)

    M  go to state 119


State 75

   37 equality_expression: equality_expression NEQ • M relational_expression

    $default  reduce using rule 1 (M)

    M  go to state 120


State 76

   40 logical_and_expression: and_helper M • equality_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 121


State 77

   38 and_helper: logical_and_expression AND •

    $default  reduce using rule 38 (and_helper)


State 78

   43 logical_or_expression: or_helper M • logical_and_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 122


State 79

   41 or_helper: logical_or_expression OR •

    $default  reduce using rule 41 (or_helper)


State 80

   44 condition: logical_or_expression QUESTION •

    $default  reduce using rule 44 (condition)


State 81

   46 conditional_expression: condition M • expression N COLON M conditional_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 123


State 82

   88 iteration_statement: FOR • ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 124


State 83

   85 if_helper: IF • ROUND_BRACKET_OPEN expression

    ROUND_BRACKET_OPEN  shift, and go to state 125


State 84

   89 jump_statement: RETURN • expression SEMICOLON
   90               | RETURN • SEMICOLON

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 126
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 127


State 85

   76 compound_statement: CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    INT                 shift, and go to state 2
    RETURN              shift, and go to state 84
    VOID                shift, and go to state 3
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    $default  reduce using rule 77 (block_item_list_opt)

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    declaration                go to state 88
    type_specifier             go to state 89
    statement                  go to state 90
    compound_statement         go to state 91
    block_item_list_opt        go to state 128
    block_item_list            go to state 93
    block_item                 go to state 94
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 86

   84 expression_statement: SEMICOLON •

    $default  reduce using rule 84 (expression_statement)


State 87

   83 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 129


State 88

   81 block_item: declaration •

    $default  reduce using rule 81 (block_item)


State 89

   50 declaration: type_specifier • init_declarator SEMICOLON

    IDENTIFIER  shift, and go to state 9
    MUL         shift, and go to state 10

    init_declarator    go to state 11
    declarator         go to state 130
    declarator_helper  go to state 13
    direct_declarator  go to state 14
    pointer            go to state 15


State 90

   82 block_item: statement •

    $default  reduce using rule 82 (block_item)


State 91

   71 statement: compound_statement •

    $default  reduce using rule 71 (statement)


State 92

   95 function_definition: type_specifier declarator changetable CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 131


State 93

   78 block_item_list_opt: block_item_list •
   80 block_item_list: block_item_list • M block_item

    CURLY_BRACKET_CLOSE  reduce using rule 78 (block_item_list_opt)
    $default             reduce using rule 1 (M)

    M  go to state 132


State 94

   79 block_item_list: block_item •

    $default  reduce using rule 79 (block_item_list)


State 95

   72 statement: expression_statement •

    $default  reduce using rule 72 (statement)


State 96

   86 selection_statement: if_helper • ROUND_BRACKET_CLOSE M statement
   87                    | if_helper • ROUND_BRACKET_CLOSE M statement N ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 133


State 97

   73 statement: selection_statement •

    $default  reduce using rule 73 (statement)


State 98

   74 statement: iteration_statement •

    $default  reduce using rule 74 (statement)


State 99

   75 statement: jump_statement •

    $default  reduce using rule 75 (statement)


State 100

   68 parameter_declaration: type_specifier declarator •

    $default  reduce using rule 68 (parameter_declaration)


State 101

   62 direct_declarator: declarator_helper changetable parameter_list_opt ROUND_BRACKET_CLOSE •

    $default  reduce using rule 62 (direct_declarator)


State 102

   67 parameter_list: parameter_list COMMA • parameter_declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 54
    parameter_declaration  go to state 134


State 103

    8 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE •

    $default  reduce using rule 8 (primary_expression)


State 104

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression • SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 135


State 105

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt • ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 136


State 106

   12 argument_expression_list_opt: argument_expression_list •
   15 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 137

    $default  reduce using rule 12 (argument_expression_list_opt)


State 107

   14 argument_expression_list: assignment_expression •

    $default  reduce using rule 14 (argument_expression_list)


State 108

   48 assignment_expression: unary_expression ASSIGN assignment_expression •

    $default  reduce using rule 48 (assignment_expression)


State 109

   24 multiplicative_expression: multiplicative_expression MUL unary_expression •

    $default  reduce using rule 24 (multiplicative_expression)


State 110

   25 multiplicative_expression: multiplicative_expression DIV unary_expression •

    $default  reduce using rule 25 (multiplicative_expression)


State 111

   26 multiplicative_expression: multiplicative_expression MOD unary_expression •

    $default  reduce using rule 26 (multiplicative_expression)


State 112

   23 multiplicative_expression: unary_expression •

    $default  reduce using rule 23 (multiplicative_expression)


State 113

   24 multiplicative_expression: multiplicative_expression • MUL unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   28 additive_expression: additive_expression ADD multiplicative_expression •

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 28 (additive_expression)


State 114

   24 multiplicative_expression: multiplicative_expression • MUL unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   29 additive_expression: additive_expression SUB multiplicative_expression •

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 29 (additive_expression)


State 115

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   31 relational_expression: relational_expression BIT_SL additive_expression •

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 31 (relational_expression)


State 116

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   32 relational_expression: relational_expression BIT_SR additive_expression •

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 32 (relational_expression)


State 117

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   33 relational_expression: relational_expression LTE additive_expression •

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 33 (relational_expression)


State 118

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   34 relational_expression: relational_expression GTE additive_expression •

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69

    $default  reduce using rule 34 (relational_expression)


State 119

   36 equality_expression: equality_expression EQ M • relational_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 138


State 120

   37 equality_expression: equality_expression NEQ M • relational_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 139


State 121

   36 equality_expression: equality_expression • EQ M relational_expression
   37                    | equality_expression • NEQ M relational_expression
   40 logical_and_expression: and_helper M equality_expression •

    EQ   shift, and go to state 74
    NEQ  shift, and go to state 75

    $default  reduce using rule 40 (logical_and_expression)


State 122

   38 and_helper: logical_and_expression • AND
   43 logical_or_expression: or_helper M logical_and_expression •

    AND  shift, and go to state 77

    $default  reduce using rule 43 (logical_or_expression)


State 123

   46 conditional_expression: condition M expression • N COLON M conditional_expression

    $default  reduce using rule 2 (N)

    N  go to state 140


State 124

   88 iteration_statement: FOR ROUND_BRACKET_OPEN • expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    expression_statement       go to state 141


State 125

   85 if_helper: IF ROUND_BRACKET_OPEN • expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 142


State 126

   90 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 90 (jump_statement)


State 127

   89 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 128

   76 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 144


State 129

   83 expression_statement: expression SEMICOLON •

    $default  reduce using rule 83 (expression_statement)


State 130

   51 init_declarator: declarator •
   52                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 51 (init_declarator)


State 131

   95 function_definition: type_specifier declarator changetable CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 95 (function_definition)


State 132

   80 block_item_list: block_item_list M • block_item

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    INT                 shift, and go to state 2
    RETURN              shift, and go to state 84
    VOID                shift, and go to state 3
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    declaration                go to state 88
    type_specifier             go to state 89
    statement                  go to state 90
    compound_statement         go to state 91
    block_item                 go to state 145
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 133

   86 selection_statement: if_helper ROUND_BRACKET_CLOSE • M statement
   87                    | if_helper ROUND_BRACKET_CLOSE • M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 146


State 134

   67 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 67 (parameter_list)


State 135

   10 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE •

    $default  reduce using rule 10 (postfix_expression)


State 136

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE •

    $default  reduce using rule 11 (postfix_expression)


State 137

   15 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 147


State 138

   31 relational_expression: relational_expression • BIT_SL additive_expression
   32                      | relational_expression • BIT_SR additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   36 equality_expression: equality_expression EQ M relational_expression •

    BIT_SL  shift, and go to state 70
    BIT_SR  shift, and go to state 71
    LTE     shift, and go to state 72
    GTE     shift, and go to state 73

    $default  reduce using rule 36 (equality_expression)


State 139

   31 relational_expression: relational_expression • BIT_SL additive_expression
   32                      | relational_expression • BIT_SR additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   37 equality_expression: equality_expression NEQ M relational_expression •

    BIT_SL  shift, and go to state 70
    BIT_SR  shift, and go to state 71
    LTE     shift, and go to state 72
    GTE     shift, and go to state 73

    $default  reduce using rule 37 (equality_expression)


State 140

   46 conditional_expression: condition M expression N • COLON M conditional_expression

    COLON  shift, and go to state 148


State 141

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement • M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 149


State 142

   85 if_helper: IF ROUND_BRACKET_OPEN expression •

    $default  reduce using rule 85 (if_helper)


State 143

   89 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 89 (jump_statement)


State 144

   76 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 76 (compound_statement)


State 145

   80 block_item_list: block_item_list M block_item •

    $default  reduce using rule 80 (block_item_list)


State 146

   86 selection_statement: if_helper ROUND_BRACKET_CLOSE M • statement
   87                    | if_helper ROUND_BRACKET_CLOSE M • statement N ELSE M statement

    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    RETURN              shift, and go to state 84
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    statement                  go to state 150
    compound_statement         go to state 91
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 147

   15 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 15 (argument_expression_list)


State 148

   46 conditional_expression: condition M expression N COLON • M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 151


State 149

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M • expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    expression_statement       go to state 152


State 150

   86 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement •
   87                    | if_helper ROUND_BRACKET_CLOSE M statement • N ELSE M statement

    ELSE      reduce using rule 2 (N)
    ELSE      [reduce using rule 86 (selection_statement)]
    $default  reduce using rule 86 (selection_statement)

    N  go to state 153


State 151

   46 conditional_expression: condition M expression N COLON M • conditional_expression

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 112
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 154


State 152

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement • M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 155


State 153

   87 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement N • ELSE M statement

    ELSE  shift, and go to state 156


State 154

   46 conditional_expression: condition M expression N COLON M conditional_expression •

    $default  reduce using rule 46 (conditional_expression)


State 155

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M • expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 157


State 156

   87 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement N ELSE • M statement

    $default  reduce using rule 1 (M)

    M  go to state 158


State 157

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression • N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 159


State 158

   87 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement N ELSE M • statement

    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    RETURN              shift, and go to state 84
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    statement                  go to state 160
    compound_statement         go to state 91
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 159

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N • ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 161


State 160

   87 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement N ELSE M statement •

    $default  reduce using rule 87 (selection_statement)


State 161

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE • M statement

    $default  reduce using rule 1 (M)

    M  go to state 162


State 162

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M • statement

    FOR                 shift, and go to state 82
    IF                  shift, and go to state 83
    RETURN              shift, and go to state 84
    IDENTIFIER          shift, and go to state 27
    STRING_LITERAL      shift, and go to state 28
    ROUND_BRACKET_OPEN  shift, and go to state 29
    CURLY_BRACKET_OPEN  shift, and go to state 85
    BITWISE_AND         shift, and go to state 30
    MUL                 shift, and go to state 31
    ADD                 shift, and go to state 32
    SUB                 shift, and go to state 33
    EXCLAIM             shift, and go to state 34
    SEMICOLON           shift, and go to state 86
    INTEGER_CONSTANT    shift, and go to state 35
    CHARACTER_CONSTANT  shift, and go to state 36

    primary_expression         go to state 37
    postfix_expression         go to state 38
    unary_expression           go to state 39
    unary_operator             go to state 40
    multiplicative_expression  go to state 41
    additive_expression        go to state 42
    relational_expression      go to state 43
    equality_expression        go to state 44
    and_helper                 go to state 45
    logical_and_expression     go to state 46
    or_helper                  go to state 47
    logical_or_expression      go to state 48
    condition                  go to state 49
    conditional_expression     go to state 50
    assignment_expression      go to state 59
    expression                 go to state 87
    statement                  go to state 163
    compound_statement         go to state 91
    expression_statement       go to state 95
    if_helper                  go to state 96
    selection_statement        go to state 97
    iteration_statement        go to state 98
    jump_statement             go to state 99


State 163

   88 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement •

    $default  reduce using rule 88 (iteration_statement)
