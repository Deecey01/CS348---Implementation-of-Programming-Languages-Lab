Terminals unused in grammar

    ARROW
    INC
    DEC
    DEREF
    ADDRESS
    '.'


State 15 conflicts: 1 shift/reduce
State 149 conflicts: 1 reduce/reduce
State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: ε

    2 N: ε

    3 primary_expression: IDENTIFIER
    4                   | INTEGER_CONSTANT
    5                   | FLOATING_CONSTANT
    6                   | CHARACTER_CONSTANT
    7                   | STRING_LITERAL
    8                   | '(' expression ')'

    9 array_reference: postfix_expression '[' expression ']'

   10 postfix_expression: primary_expression
   11                   | array_reference
   12                   | postfix_expression '(' ')'
   13                   | postfix_expression '(' argument_expression_list ')'

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list ',' assignment_expression

   16 unary_expression: postfix_expression
   17                 | '&' unary_expression
   18                 | '*' unary_expression
   19                 | '+' unary_expression
   20                 | '-' unary_expression
   21                 | '!' unary_expression

   22 multiplicative_expression: unary_expression
   23                          | multiplicative_expression '*' unary_expression
   24                          | multiplicative_expression '/' unary_expression
   25                          | multiplicative_expression '%' unary_expression

   26 additive_expression: multiplicative_expression
   27                    | additive_expression '+' multiplicative_expression
   28                    | additive_expression '-' multiplicative_expression

   29 shift_expression: additive_expression
   30                 | shift_expression LEFT_SHIFT additive_expression
   31                 | shift_expression RIGHT_SHIFT additive_expression

   32 relational_expression: shift_expression
   33                      | relational_expression '<' shift_expression
   34                      | relational_expression '>' shift_expression
   35                      | relational_expression LE_OP shift_expression
   36                      | relational_expression GE_OP shift_expression

   37 equality_expression: relational_expression
   38                    | equality_expression EQ_OP relational_expression
   39                    | equality_expression NE_OP relational_expression

   40 and_expression: equality_expression
   41               | and_expression '&' equality_expression

   42 exclusive_or_expression: and_expression
   43                        | exclusive_or_expression '^' and_expression

   44 inclusive_or_expression: exclusive_or_expression
   45                        | inclusive_or_expression '|' exclusive_or_expression

   46 logical_and_expression: inclusive_or_expression
   47                       | logical_and_expression AND_OP M inclusive_or_expression

   48 logical_or_expression: logical_and_expression
   49                      | logical_or_expression OR_OP M logical_and_expression

   50 conditional_expression: logical_or_expression
   51                       | logical_or_expression '?' expression ':' conditional_expression

   52 assignment_expression: conditional_expression
   53                      | unary_expression '=' assignment_expression

   54 expression: assignment_expression

   55 declaration: type_specifier declarator
   56            | type_specifier init_declarator ';'

   57 init_declarator: declarator
   58                | declarator '=' initializer

   59 type_specifier: VOID
   60               | CHAR
   61               | INT
   62               | FLOAT

   63 declarator: direct_declarator
   64           | '*' declarator

   65 direct_declarator: IDENTIFIER
   66                  | IDENTIFIER '[' INTEGER_CONSTANT ']'
   67                  | '(' declarator ')'
   68                  | direct_declarator '(' parameter_list ')'
   69                  | direct_declarator '(' ')'

   70 parameter_list: parameter_declaration
   71               | parameter_list ',' parameter_declaration

   72 parameter_declaration: type_specifier declarator
   73                      | type_specifier

   74 initializer: assignment_expression

   75 statement: compound_statement
   76          | expression_statement
   77          | selection_statement
   78          | iteration_statement
   79          | jump_statement

   80 compound_statement: '{' '}'

   81 $@1: ε

   82 compound_statement: '{' $@1 block_item_list '}'

   83 block_item_list: block_item
   84                | block_item_list M block_item

   85 block_item: declaration
   86           | statement

   87 expression_statement: ';'
   88                     | expression ';'

   89 selection_statement: IF '(' expression ')' M statement
   90                    | IF '(' expression ')' M statement ELSE N M statement

   91 iteration_statement: WHILE M '(' expression ')' M statement
   92                    | FOR '(' expression_statement M expression_statement M expression N ')' M statement
   93                    | DO M statement WHILE M '(' expression ')' ';'

   94 jump_statement: RETURN ';'
   95               | RETURN expression ';'
   96               | BREAK ';'
   97               | CONTINUE ';'

   98 translation_unit: external_declaration
   99                 | translation_unit external_declaration

  100 external_declaration: function_definition
  101                     | declaration

  102 function_definition: type_specifier declarator compound_statement


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 21
    '%' (37) 25
    '&' (38) 17 41
    '(' (40) 8 12 13 67 68 69 89 90 91 92 93
    ')' (41) 8 12 13 67 68 69 89 90 91 92 93
    '*' (42) 18 23 64
    '+' (43) 19 27
    ',' (44) 15 71
    '-' (45) 20 28
    '.' (46)
    '/' (47) 24
    ':' (58) 51
    ';' (59) 56 87 88 93 94 95 96 97
    '<' (60) 33
    '=' (61) 53 58
    '>' (62) 34
    '?' (63) 51
    '[' (91) 9 66
    ']' (93) 9 66
    '^' (94) 43
    '{' (123) 80 82
    '|' (124) 45
    '}' (125) 80 82
    error (256)
    IDENTIFIER <sym> (258) 3 65 66
    INTEGER_CONSTANT <sym> (259) 4 66
    FLOATING_CONSTANT <sym> (260) 5
    CHARACTER_CONSTANT <sym> (261) 6
    STRING_LITERAL <sval> (262) 7
    RETURN (263) 94 95
    VOID (264) 59
    CHAR (265) 60
    INT (266) 61
    FLOAT (267) 62
    FOR (268) 92
    WHILE (269) 91 93
    IF (270) 89 90
    DO (271) 93
    ELSE (272) 90
    BREAK (273) 96
    CONTINUE (274) 97
    ARROW (275)
    INC (276)
    DEC (277)
    LEFT_SHIFT (278) 30
    RIGHT_SHIFT (279) 31
    LE_OP (280) 35
    GE_OP (281) 36
    EQ_OP (282) 38
    NE_OP (283) 39
    AND_OP (284) 47
    OR_OP (285) 49
    UMINUS (286)
    UPLUS (287)
    DEREF (288)
    ADDRESS (289)


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    M <attr> (59)
        on left: 1
        on right: 47 49 84 89 90 91 92 93
    N <attr> (60)
        on left: 2
        on right: 90 92
    primary_expression <attr> (61)
        on left: 3 4 5 6 7 8
        on right: 10
    array_reference <arr_ref> (62)
        on left: 9
        on right: 11
    postfix_expression <attr> (63)
        on left: 10 11 12 13
        on right: 9 12 13 16
    argument_expression_list (64)
        on left: 14 15
        on right: 13 15
    unary_expression <attr> (65)
        on left: 16 17 18 19 20 21
        on right: 17 18 19 20 21 22 23 24 25 53
    multiplicative_expression <attr> (66)
        on left: 22 23 24 25
        on right: 23 24 25 26 27 28
    additive_expression <attr> (67)
        on left: 26 27 28
        on right: 27 28 29 30 31
    shift_expression <attr> (68)
        on left: 29 30 31
        on right: 30 31 32 33 34 35 36
    relational_expression <attr> (69)
        on left: 32 33 34 35 36
        on right: 33 34 35 36 37 38 39
    equality_expression <attr> (70)
        on left: 37 38 39
        on right: 38 39 40 41
    and_expression <attr> (71)
        on left: 40 41
        on right: 41 42 43
    exclusive_or_expression <attr> (72)
        on left: 42 43
        on right: 43 44 45
    inclusive_or_expression <attr> (73)
        on left: 44 45
        on right: 45 46 47
    logical_and_expression <attr> (74)
        on left: 46 47
        on right: 47 48 49
    logical_or_expression <attr> (75)
        on left: 48 49
        on right: 49 50 51
    conditional_expression <attr> (76)
        on left: 50 51
        on right: 51 52
    assignment_expression <attr> (77)
        on left: 52 53
        on right: 14 15 53 54 74
    expression <attr> (78)
        on left: 54
        on right: 8 9 51 88 89 90 91 92 93 95
    declaration (79)
        on left: 55 56
        on right: 85 101
    init_declarator <sym> (80)
        on left: 57 58
        on right: 56
    type_specifier <type_name> (81)
        on left: 59 60 61 62
        on right: 55 56 72 73 102
    declarator <sym> (82)
        on left: 63 64
        on right: 55 57 58 64 67 72 102
    direct_declarator <sym> (83)
        on left: 65 66 67 68 69
        on right: 63 68 69
    parameter_list (84)
        on left: 70 71
        on right: 68 71
    parameter_declaration <sym> (85)
        on left: 72 73
        on right: 70 71
    initializer <sym> (86)
        on left: 74
        on right: 58
    statement <attr> (87)
        on left: 75 76 77 78 79
        on right: 86 89 90 91 92 93
    compound_statement <attr> (88)
        on left: 80 82
        on right: 75 102
    $@1 (89)
        on left: 81
        on right: 82
    block_item_list <attr> (90)
        on left: 83 84
        on right: 82 84
    block_item <attr> (91)
        on left: 85 86
        on right: 83 84
    expression_statement <attr> (92)
        on left: 87 88
        on right: 76 92
    selection_statement <attr> (93)
        on left: 89 90
        on right: 77
    iteration_statement <attr> (94)
        on left: 91 92 93
        on right: 78
    jump_statement <attr> (95)
        on left: 94 95 96 97
        on right: 79
    translation_unit (96)
        on left: 98 99
        on right: 0 99
    external_declaration (97)
        on left: 100 101
        on right: 98 99
    function_definition (98)
        on left: 102
        on right: 100


State 0

    0 $accept: • translation_unit $end

    VOID   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    declaration           go to state 5
    type_specifier        go to state 6
    translation_unit      go to state 7
    external_declaration  go to state 8
    function_definition   go to state 9


State 1

   59 type_specifier: VOID •

    $default  reduce using rule 59 (type_specifier)


State 2

   60 type_specifier: CHAR •

    $default  reduce using rule 60 (type_specifier)


State 3

   61 type_specifier: INT •

    $default  reduce using rule 61 (type_specifier)


State 4

   62 type_specifier: FLOAT •

    $default  reduce using rule 62 (type_specifier)


State 5

  101 external_declaration: declaration •

    $default  reduce using rule 101 (external_declaration)


State 6

   55 declaration: type_specifier • declarator
   56            | type_specifier • init_declarator ';'
  102 function_definition: type_specifier • declarator compound_statement

    IDENTIFIER  shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12

    init_declarator    go to state 13
    declarator         go to state 14
    direct_declarator  go to state 15


State 7

    0 $accept: translation_unit • $end
   99 translation_unit: translation_unit • external_declaration

    $end   shift, and go to state 16
    VOID   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    declaration           go to state 5
    type_specifier        go to state 6
    external_declaration  go to state 17
    function_definition   go to state 9


State 8

   98 translation_unit: external_declaration •

    $default  reduce using rule 98 (translation_unit)


State 9

  100 external_declaration: function_definition •

    $default  reduce using rule 100 (external_declaration)


State 10

   65 direct_declarator: IDENTIFIER •
   66                  | IDENTIFIER • '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 18

    $default  reduce using rule 65 (direct_declarator)


State 11

   64 declarator: '*' • declarator

    IDENTIFIER  shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12

    declarator         go to state 19
    direct_declarator  go to state 15


State 12

   67 direct_declarator: '(' • declarator ')'

    IDENTIFIER  shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12

    declarator         go to state 20
    direct_declarator  go to state 15


State 13

   56 declaration: type_specifier init_declarator • ';'

    ';'  shift, and go to state 21


State 14

   55 declaration: type_specifier declarator •
   57 init_declarator: declarator •
   58                | declarator • '=' initializer
  102 function_definition: type_specifier declarator • compound_statement

    '='  shift, and go to state 22
    '{'  shift, and go to state 23

    ';'       reduce using rule 57 (init_declarator)
    $default  reduce using rule 55 (declaration)

    compound_statement  go to state 24


State 15

   63 declarator: direct_declarator •
   68 direct_declarator: direct_declarator • '(' parameter_list ')'
   69                  | direct_declarator • '(' ')'

    '('  shift, and go to state 25

    '('       [reduce using rule 63 (declarator)]
    $default  reduce using rule 63 (declarator)


State 16

    0 $accept: translation_unit $end •

    $default  accept


State 17

   99 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 99 (translation_unit)


State 18

   66 direct_declarator: IDENTIFIER '[' • INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 26


State 19

   64 declarator: '*' declarator •

    $default  reduce using rule 64 (declarator)


State 20

   67 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 27


State 21

   56 declaration: type_specifier init_declarator ';' •

    $default  reduce using rule 56 (declaration)


State 22

   58 init_declarator: declarator '=' • initializer

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 54
    initializer                go to state 55


State 23

   80 compound_statement: '{' • '}'
   82                   | '{' • $@1 block_item_list '}'

    '}'  shift, and go to state 56

    $default  reduce using rule 81 ($@1)

    $@1  go to state 57


State 24

  102 function_definition: type_specifier declarator compound_statement •

    $default  reduce using rule 102 (function_definition)


State 25

   68 direct_declarator: direct_declarator '(' • parameter_list ')'
   69                  | direct_declarator '(' • ')'

    VOID   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    ')'    shift, and go to state 58

    type_specifier         go to state 59
    parameter_list         go to state 60
    parameter_declaration  go to state 61


State 26

   66 direct_declarator: IDENTIFIER '[' INTEGER_CONSTANT • ']'

    ']'  shift, and go to state 62


State 27

   67 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 67 (direct_declarator)


State 28

    3 primary_expression: IDENTIFIER •

    $default  reduce using rule 3 (primary_expression)


State 29

    4 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 4 (primary_expression)


State 30

    5 primary_expression: FLOATING_CONSTANT •

    $default  reduce using rule 5 (primary_expression)


State 31

    6 primary_expression: CHARACTER_CONSTANT •

    $default  reduce using rule 6 (primary_expression)


State 32

    7 primary_expression: STRING_LITERAL •

    $default  reduce using rule 7 (primary_expression)


State 33

   17 unary_expression: '&' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 63


State 34

   19 unary_expression: '+' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 64


State 35

   20 unary_expression: '-' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 65


State 36

   18 unary_expression: '*' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 66


State 37

   21 unary_expression: '!' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 67


State 38

    8 primary_expression: '(' • expression ')'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 69


State 39

   10 postfix_expression: primary_expression •

    $default  reduce using rule 10 (postfix_expression)


State 40

   11 postfix_expression: array_reference •

    $default  reduce using rule 11 (postfix_expression)


State 41

    9 array_reference: postfix_expression • '[' expression ']'
   12 postfix_expression: postfix_expression • '(' ')'
   13                   | postfix_expression • '(' argument_expression_list ')'
   16 unary_expression: postfix_expression •

    '['  shift, and go to state 70
    '('  shift, and go to state 71

    $default  reduce using rule 16 (unary_expression)


State 42

   22 multiplicative_expression: unary_expression •
   53 assignment_expression: unary_expression • '=' assignment_expression

    '='  shift, and go to state 72

    $default  reduce using rule 22 (multiplicative_expression)


State 43

   23 multiplicative_expression: multiplicative_expression • '*' unary_expression
   24                          | multiplicative_expression • '/' unary_expression
   25                          | multiplicative_expression • '%' unary_expression
   26 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 26 (additive_expression)


State 44

   27 additive_expression: additive_expression • '+' multiplicative_expression
   28                    | additive_expression • '-' multiplicative_expression
   29 shift_expression: additive_expression •

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77

    $default  reduce using rule 29 (shift_expression)


State 45

   30 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   31                 | shift_expression • RIGHT_SHIFT additive_expression
   32 relational_expression: shift_expression •

    LEFT_SHIFT   shift, and go to state 78
    RIGHT_SHIFT  shift, and go to state 79

    $default  reduce using rule 32 (relational_expression)


State 46

   33 relational_expression: relational_expression • '<' shift_expression
   34                      | relational_expression • '>' shift_expression
   35                      | relational_expression • LE_OP shift_expression
   36                      | relational_expression • GE_OP shift_expression
   37 equality_expression: relational_expression •

    LE_OP  shift, and go to state 80
    GE_OP  shift, and go to state 81
    '<'    shift, and go to state 82
    '>'    shift, and go to state 83

    $default  reduce using rule 37 (equality_expression)


State 47

   38 equality_expression: equality_expression • EQ_OP relational_expression
   39                    | equality_expression • NE_OP relational_expression
   40 and_expression: equality_expression •

    EQ_OP  shift, and go to state 84
    NE_OP  shift, and go to state 85

    $default  reduce using rule 40 (and_expression)


State 48

   41 and_expression: and_expression • '&' equality_expression
   42 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 86

    $default  reduce using rule 42 (exclusive_or_expression)


State 49

   43 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   44 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 87

    $default  reduce using rule 44 (inclusive_or_expression)


State 50

   45 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   46 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 88

    $default  reduce using rule 46 (logical_and_expression)


State 51

   47 logical_and_expression: logical_and_expression • AND_OP M inclusive_or_expression
   48 logical_or_expression: logical_and_expression •

    AND_OP  shift, and go to state 89

    $default  reduce using rule 48 (logical_or_expression)


State 52

   49 logical_or_expression: logical_or_expression • OR_OP M logical_and_expression
   50 conditional_expression: logical_or_expression •
   51                       | logical_or_expression • '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 90
    '?'    shift, and go to state 91

    $default  reduce using rule 50 (conditional_expression)


State 53

   52 assignment_expression: conditional_expression •

    $default  reduce using rule 52 (assignment_expression)


State 54

   74 initializer: assignment_expression •

    $default  reduce using rule 74 (initializer)


State 55

   58 init_declarator: declarator '=' initializer •

    $default  reduce using rule 58 (init_declarator)


State 56

   80 compound_statement: '{' '}' •

    $default  reduce using rule 80 (compound_statement)


State 57

   82 compound_statement: '{' $@1 • block_item_list '}'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    INT                 shift, and go to state 3
    FLOAT               shift, and go to state 4
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    declaration                go to state 101
    type_specifier             go to state 102
    statement                  go to state 103
    compound_statement         go to state 104
    block_item_list            go to state 105
    block_item                 go to state 106
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 58

   69 direct_declarator: direct_declarator '(' ')' •

    $default  reduce using rule 69 (direct_declarator)


State 59

   72 parameter_declaration: type_specifier • declarator
   73                      | type_specifier •

    IDENTIFIER  shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12

    $default  reduce using rule 73 (parameter_declaration)

    declarator         go to state 111
    direct_declarator  go to state 15


State 60

   68 direct_declarator: direct_declarator '(' parameter_list • ')'
   71 parameter_list: parameter_list • ',' parameter_declaration

    ')'  shift, and go to state 112
    ','  shift, and go to state 113


State 61

   70 parameter_list: parameter_declaration •

    $default  reduce using rule 70 (parameter_list)


State 62

   66 direct_declarator: IDENTIFIER '[' INTEGER_CONSTANT ']' •

    $default  reduce using rule 66 (direct_declarator)


State 63

   17 unary_expression: '&' unary_expression •

    $default  reduce using rule 17 (unary_expression)


State 64

   19 unary_expression: '+' unary_expression •

    $default  reduce using rule 19 (unary_expression)


State 65

   20 unary_expression: '-' unary_expression •

    $default  reduce using rule 20 (unary_expression)


State 66

   18 unary_expression: '*' unary_expression •

    $default  reduce using rule 18 (unary_expression)


State 67

   21 unary_expression: '!' unary_expression •

    $default  reduce using rule 21 (unary_expression)


State 68

   54 expression: assignment_expression •

    $default  reduce using rule 54 (expression)


State 69

    8 primary_expression: '(' expression • ')'

    ')'  shift, and go to state 114


State 70

    9 array_reference: postfix_expression '[' • expression ']'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 115


State 71

   12 postfix_expression: postfix_expression '(' • ')'
   13                   | postfix_expression '(' • argument_expression_list ')'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ')'                 shift, and go to state 116

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    argument_expression_list   go to state 117
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 118


State 72

   53 assignment_expression: unary_expression '=' • assignment_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 119


State 73

   23 multiplicative_expression: multiplicative_expression '*' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 120


State 74

   24 multiplicative_expression: multiplicative_expression '/' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 121


State 75

   25 multiplicative_expression: multiplicative_expression '%' • unary_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression  go to state 39
    array_reference     go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 122


State 76

   27 additive_expression: additive_expression '+' • multiplicative_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 124


State 77

   28 additive_expression: additive_expression '-' • multiplicative_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 125


State 78

   30 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 126


State 79

   31 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 127


State 80

   35 relational_expression: relational_expression LE_OP • shift_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 128


State 81

   36 relational_expression: relational_expression GE_OP • shift_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 129


State 82

   33 relational_expression: relational_expression '<' • shift_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 130


State 83

   34 relational_expression: relational_expression '>' • shift_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 131


State 84

   38 equality_expression: equality_expression EQ_OP • relational_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 132


State 85

   39 equality_expression: equality_expression NE_OP • relational_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 133


State 86

   41 and_expression: and_expression '&' • equality_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 134


State 87

   43 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 135


State 88

   45 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 136


State 89

   47 logical_and_expression: logical_and_expression AND_OP • M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 137


State 90

   49 logical_or_expression: logical_or_expression OR_OP • M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 138


State 91

   51 conditional_expression: logical_or_expression '?' • expression ':' conditional_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 139


State 92

   94 jump_statement: RETURN • ';'
   95               | RETURN • expression ';'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 140

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 141


State 93

   92 iteration_statement: FOR • '(' expression_statement M expression_statement M expression N ')' M statement

    '('  shift, and go to state 142


State 94

   91 iteration_statement: WHILE • M '(' expression ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 143


State 95

   89 selection_statement: IF • '(' expression ')' M statement
   90                    | IF • '(' expression ')' M statement ELSE N M statement

    '('  shift, and go to state 144


State 96

   93 iteration_statement: DO • M statement WHILE M '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 145


State 97

   96 jump_statement: BREAK • ';'

    ';'  shift, and go to state 146


State 98

   97 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 147


State 99

   87 expression_statement: ';' •

    $default  reduce using rule 87 (expression_statement)


State 100

   88 expression_statement: expression • ';'

    ';'  shift, and go to state 148


State 101

   85 block_item: declaration •

    $default  reduce using rule 85 (block_item)


State 102

   55 declaration: type_specifier • declarator
   56            | type_specifier • init_declarator ';'

    IDENTIFIER  shift, and go to state 10
    '*'         shift, and go to state 11
    '('         shift, and go to state 12

    init_declarator    go to state 13
    declarator         go to state 149
    direct_declarator  go to state 15


State 103

   86 block_item: statement •

    $default  reduce using rule 86 (block_item)


State 104

   75 statement: compound_statement •

    $default  reduce using rule 75 (statement)


State 105

   82 compound_statement: '{' $@1 block_item_list • '}'
   84 block_item_list: block_item_list • M block_item

    '}'  shift, and go to state 150

    $default  reduce using rule 1 (M)

    M  go to state 151


State 106

   83 block_item_list: block_item •

    $default  reduce using rule 83 (block_item_list)


State 107

   76 statement: expression_statement •

    $default  reduce using rule 76 (statement)


State 108

   77 statement: selection_statement •

    $default  reduce using rule 77 (statement)


State 109

   78 statement: iteration_statement •

    $default  reduce using rule 78 (statement)


State 110

   79 statement: jump_statement •

    $default  reduce using rule 79 (statement)


State 111

   72 parameter_declaration: type_specifier declarator •

    $default  reduce using rule 72 (parameter_declaration)


State 112

   68 direct_declarator: direct_declarator '(' parameter_list ')' •

    $default  reduce using rule 68 (direct_declarator)


State 113

   71 parameter_list: parameter_list ',' • parameter_declaration

    VOID   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type_specifier         go to state 59
    parameter_declaration  go to state 152


State 114

    8 primary_expression: '(' expression ')' •

    $default  reduce using rule 8 (primary_expression)


State 115

    9 array_reference: postfix_expression '[' expression • ']'

    ']'  shift, and go to state 153


State 116

   12 postfix_expression: postfix_expression '(' ')' •

    $default  reduce using rule 12 (postfix_expression)


State 117

   13 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   15 argument_expression_list: argument_expression_list • ',' assignment_expression

    ')'  shift, and go to state 154
    ','  shift, and go to state 155


State 118

   14 argument_expression_list: assignment_expression •

    $default  reduce using rule 14 (argument_expression_list)


State 119

   53 assignment_expression: unary_expression '=' assignment_expression •

    $default  reduce using rule 53 (assignment_expression)


State 120

   23 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 23 (multiplicative_expression)


State 121

   24 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 24 (multiplicative_expression)


State 122

   25 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  reduce using rule 25 (multiplicative_expression)


State 123

   22 multiplicative_expression: unary_expression •

    $default  reduce using rule 22 (multiplicative_expression)


State 124

   23 multiplicative_expression: multiplicative_expression • '*' unary_expression
   24                          | multiplicative_expression • '/' unary_expression
   25                          | multiplicative_expression • '%' unary_expression
   27 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 27 (additive_expression)


State 125

   23 multiplicative_expression: multiplicative_expression • '*' unary_expression
   24                          | multiplicative_expression • '/' unary_expression
   25                          | multiplicative_expression • '%' unary_expression
   28 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 73
    '/'  shift, and go to state 74
    '%'  shift, and go to state 75

    $default  reduce using rule 28 (additive_expression)


State 126

   27 additive_expression: additive_expression • '+' multiplicative_expression
   28                    | additive_expression • '-' multiplicative_expression
   30 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77

    $default  reduce using rule 30 (shift_expression)


State 127

   27 additive_expression: additive_expression • '+' multiplicative_expression
   28                    | additive_expression • '-' multiplicative_expression
   31 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77

    $default  reduce using rule 31 (shift_expression)


State 128

   30 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   31                 | shift_expression • RIGHT_SHIFT additive_expression
   35 relational_expression: relational_expression LE_OP shift_expression •

    LEFT_SHIFT   shift, and go to state 78
    RIGHT_SHIFT  shift, and go to state 79

    $default  reduce using rule 35 (relational_expression)


State 129

   30 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   31                 | shift_expression • RIGHT_SHIFT additive_expression
   36 relational_expression: relational_expression GE_OP shift_expression •

    LEFT_SHIFT   shift, and go to state 78
    RIGHT_SHIFT  shift, and go to state 79

    $default  reduce using rule 36 (relational_expression)


State 130

   30 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   31                 | shift_expression • RIGHT_SHIFT additive_expression
   33 relational_expression: relational_expression '<' shift_expression •

    LEFT_SHIFT   shift, and go to state 78
    RIGHT_SHIFT  shift, and go to state 79

    $default  reduce using rule 33 (relational_expression)


State 131

   30 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   31                 | shift_expression • RIGHT_SHIFT additive_expression
   34 relational_expression: relational_expression '>' shift_expression •

    LEFT_SHIFT   shift, and go to state 78
    RIGHT_SHIFT  shift, and go to state 79

    $default  reduce using rule 34 (relational_expression)


State 132

   33 relational_expression: relational_expression • '<' shift_expression
   34                      | relational_expression • '>' shift_expression
   35                      | relational_expression • LE_OP shift_expression
   36                      | relational_expression • GE_OP shift_expression
   38 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 80
    GE_OP  shift, and go to state 81
    '<'    shift, and go to state 82
    '>'    shift, and go to state 83

    $default  reduce using rule 38 (equality_expression)


State 133

   33 relational_expression: relational_expression • '<' shift_expression
   34                      | relational_expression • '>' shift_expression
   35                      | relational_expression • LE_OP shift_expression
   36                      | relational_expression • GE_OP shift_expression
   39 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 80
    GE_OP  shift, and go to state 81
    '<'    shift, and go to state 82
    '>'    shift, and go to state 83

    $default  reduce using rule 39 (equality_expression)


State 134

   38 equality_expression: equality_expression • EQ_OP relational_expression
   39                    | equality_expression • NE_OP relational_expression
   41 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 84
    NE_OP  shift, and go to state 85

    $default  reduce using rule 41 (and_expression)


State 135

   41 and_expression: and_expression • '&' equality_expression
   43 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 86

    $default  reduce using rule 43 (exclusive_or_expression)


State 136

   43 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   45 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 87

    $default  reduce using rule 45 (inclusive_or_expression)


State 137

   47 logical_and_expression: logical_and_expression AND_OP M • inclusive_or_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 156


State 138

   49 logical_or_expression: logical_or_expression OR_OP M • logical_and_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 157


State 139

   51 conditional_expression: logical_or_expression '?' expression • ':' conditional_expression

    ':'  shift, and go to state 158


State 140

   94 jump_statement: RETURN ';' •

    $default  reduce using rule 94 (jump_statement)


State 141

   95 jump_statement: RETURN expression • ';'

    ';'  shift, and go to state 159


State 142

   92 iteration_statement: FOR '(' • expression_statement M expression_statement M expression N ')' M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    expression_statement       go to state 160


State 143

   91 iteration_statement: WHILE M • '(' expression ')' M statement

    '('  shift, and go to state 161


State 144

   89 selection_statement: IF '(' • expression ')' M statement
   90                    | IF '(' • expression ')' M statement ELSE N M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 162


State 145

   93 iteration_statement: DO M • statement WHILE M '(' expression ')' ';'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    statement                  go to state 163
    compound_statement         go to state 104
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 146

   96 jump_statement: BREAK ';' •

    $default  reduce using rule 96 (jump_statement)


State 147

   97 jump_statement: CONTINUE ';' •

    $default  reduce using rule 97 (jump_statement)


State 148

   88 expression_statement: expression ';' •

    $default  reduce using rule 88 (expression_statement)


State 149

   55 declaration: type_specifier declarator •
   57 init_declarator: declarator •
   58                | declarator • '=' initializer

    '='  shift, and go to state 22

    ';'       reduce using rule 55 (declaration)
    ';'       [reduce using rule 57 (init_declarator)]
    $default  reduce using rule 55 (declaration)


State 150

   82 compound_statement: '{' $@1 block_item_list '}' •

    $default  reduce using rule 82 (compound_statement)


State 151

   84 block_item_list: block_item_list M • block_item

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    VOID                shift, and go to state 1
    CHAR                shift, and go to state 2
    INT                 shift, and go to state 3
    FLOAT               shift, and go to state 4
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    declaration                go to state 101
    type_specifier             go to state 102
    statement                  go to state 103
    compound_statement         go to state 104
    block_item                 go to state 164
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 152

   71 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 71 (parameter_list)


State 153

    9 array_reference: postfix_expression '[' expression ']' •

    $default  reduce using rule 9 (array_reference)


State 154

   13 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  reduce using rule 13 (postfix_expression)


State 155

   15 argument_expression_list: argument_expression_list ',' • assignment_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 165


State 156

   45 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   47 logical_and_expression: logical_and_expression AND_OP M inclusive_or_expression •

    '|'  shift, and go to state 88

    $default  reduce using rule 47 (logical_and_expression)


State 157

   47 logical_and_expression: logical_and_expression • AND_OP M inclusive_or_expression
   49 logical_or_expression: logical_or_expression OR_OP M logical_and_expression •

    AND_OP  shift, and go to state 89

    $default  reduce using rule 49 (logical_or_expression)


State 158

   51 conditional_expression: logical_or_expression '?' expression ':' • conditional_expression

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 123
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 166


State 159

   95 jump_statement: RETURN expression ';' •

    $default  reduce using rule 95 (jump_statement)


State 160

   92 iteration_statement: FOR '(' expression_statement • M expression_statement M expression N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 167


State 161

   91 iteration_statement: WHILE M '(' • expression ')' M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 168


State 162

   89 selection_statement: IF '(' expression • ')' M statement
   90                    | IF '(' expression • ')' M statement ELSE N M statement

    ')'  shift, and go to state 169


State 163

   93 iteration_statement: DO M statement • WHILE M '(' expression ')' ';'

    WHILE  shift, and go to state 170


State 164

   84 block_item_list: block_item_list M block_item •

    $default  reduce using rule 84 (block_item_list)


State 165

   15 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 15 (argument_expression_list)


State 166

   51 conditional_expression: logical_or_expression '?' expression ':' conditional_expression •

    $default  reduce using rule 51 (conditional_expression)


State 167

   92 iteration_statement: FOR '(' expression_statement M • expression_statement M expression N ')' M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    expression_statement       go to state 171


State 168

   91 iteration_statement: WHILE M '(' expression • ')' M statement

    ')'  shift, and go to state 172


State 169

   89 selection_statement: IF '(' expression ')' • M statement
   90                    | IF '(' expression ')' • M statement ELSE N M statement

    $default  reduce using rule 1 (M)

    M  go to state 173


State 170

   93 iteration_statement: DO M statement WHILE • M '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 174


State 171

   92 iteration_statement: FOR '(' expression_statement M expression_statement • M expression N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 175


State 172

   91 iteration_statement: WHILE M '(' expression ')' • M statement

    $default  reduce using rule 1 (M)

    M  go to state 176


State 173

   89 selection_statement: IF '(' expression ')' M • statement
   90                    | IF '(' expression ')' M • statement ELSE N M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    statement                  go to state 177
    compound_statement         go to state 104
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 174

   93 iteration_statement: DO M statement WHILE M • '(' expression ')' ';'

    '('  shift, and go to state 178


State 175

   92 iteration_statement: FOR '(' expression_statement M expression_statement M • expression N ')' M statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 179


State 176

   91 iteration_statement: WHILE M '(' expression ')' M • statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    statement                  go to state 180
    compound_statement         go to state 104
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 177

   89 selection_statement: IF '(' expression ')' M statement •
   90                    | IF '(' expression ')' M statement • ELSE N M statement

    ELSE  shift, and go to state 181

    ELSE      [reduce using rule 89 (selection_statement)]
    $default  reduce using rule 89 (selection_statement)


State 178

   93 iteration_statement: DO M statement WHILE M '(' • expression ')' ';'

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 182


State 179

   92 iteration_statement: FOR '(' expression_statement M expression_statement M expression • N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 183


State 180

   91 iteration_statement: WHILE M '(' expression ')' M statement •

    $default  reduce using rule 91 (iteration_statement)


State 181

   90 selection_statement: IF '(' expression ')' M statement ELSE • N M statement

    $default  reduce using rule 2 (N)

    N  go to state 184


State 182

   93 iteration_statement: DO M statement WHILE M '(' expression • ')' ';'

    ')'  shift, and go to state 185


State 183

   92 iteration_statement: FOR '(' expression_statement M expression_statement M expression N • ')' M statement

    ')'  shift, and go to state 186


State 184

   90 selection_statement: IF '(' expression ')' M statement ELSE N • M statement

    $default  reduce using rule 1 (M)

    M  go to state 187


State 185

   93 iteration_statement: DO M statement WHILE M '(' expression ')' • ';'

    ';'  shift, and go to state 188


State 186

   92 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' • M statement

    $default  reduce using rule 1 (M)

    M  go to state 189


State 187

   90 selection_statement: IF '(' expression ')' M statement ELSE N M • statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    statement                  go to state 190
    compound_statement         go to state 104
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 188

   93 iteration_statement: DO M statement WHILE M '(' expression ')' ';' •

    $default  reduce using rule 93 (iteration_statement)


State 189

   92 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' M • statement

    IDENTIFIER          shift, and go to state 28
    INTEGER_CONSTANT    shift, and go to state 29
    FLOATING_CONSTANT   shift, and go to state 30
    CHARACTER_CONSTANT  shift, and go to state 31
    STRING_LITERAL      shift, and go to state 32
    RETURN              shift, and go to state 92
    FOR                 shift, and go to state 93
    WHILE               shift, and go to state 94
    IF                  shift, and go to state 95
    DO                  shift, and go to state 96
    BREAK               shift, and go to state 97
    CONTINUE            shift, and go to state 98
    '&'                 shift, and go to state 33
    '+'                 shift, and go to state 34
    '-'                 shift, and go to state 35
    '*'                 shift, and go to state 36
    '!'                 shift, and go to state 37
    '('                 shift, and go to state 38
    ';'                 shift, and go to state 99
    '{'                 shift, and go to state 23

    primary_expression         go to state 39
    array_reference            go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    shift_expression           go to state 45
    relational_expression      go to state 46
    equality_expression        go to state 47
    and_expression             go to state 48
    exclusive_or_expression    go to state 49
    inclusive_or_expression    go to state 50
    logical_and_expression     go to state 51
    logical_or_expression      go to state 52
    conditional_expression     go to state 53
    assignment_expression      go to state 68
    expression                 go to state 100
    statement                  go to state 191
    compound_statement         go to state 104
    expression_statement       go to state 107
    selection_statement        go to state 108
    iteration_statement        go to state 109
    jump_statement             go to state 110


State 190

   90 selection_statement: IF '(' expression ')' M statement ELSE N M statement •

    $default  reduce using rule 90 (selection_statement)


State 191

   92 iteration_statement: FOR '(' expression_statement M expression_statement M expression N ')' M statement •

    $default  reduce using rule 92 (iteration_statement)
